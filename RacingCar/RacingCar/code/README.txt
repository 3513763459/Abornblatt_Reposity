/***************************************指针数组与数组指针***************************************/
指针数组：int* ptrArray[10];
这里ptrArray是一个数组，它有10个元素，每个元素都是一个int*类型的指针。
数组指针：int (*ptrToArray)[10];
这里ptrToArray是一个指针，它指向一个有10个整数的数组。
/*********************************************************************************************/
分析右迷宫巡线
三步断，首先判断前方,前方为黑色,下一步记录左方向和左上的值,同时以左侧为前方,也就是调转方向啦,但是dir=3
如果前方为白色,就会接着判断右前方,如果右前方为黑色,说明是直道,dir保持为0,turn为0
如果前方为白色,右前方也为白色,直接向右前方跳转,同时dir为1,turn为0
        0
 dir    ^        
     3<   >1
        2      
        
迷宫法从行搜索边界,当小车拐弯时，底部边界信息容易丢失(摄像头看不到了),所以给图像打上黑边,由于mt9v03x最右侧自带黑边,只需给最左侧打上黑边即可,同时由于迷宫法要保证与边界有half的距离(否则x+dx就会访问图像数组外),continue解决(看我的代码)
然后呢,由于打上了黑边,在小车拐弯时,并且比如说右拐弯的时候左边界在图像的位置会向右靠拢(不明白就推车看看),然后呢就会容易超过图像中间,那么下一帧图像处理的时候(要知道咱搜线是从中间向左右搜索边界),直接就搜不到左边界了,会直接跳到左黑框
这样的话偏差是错误的,所以追加判断,如果左右边界即将到达中间的时候HANDOFF(就是这个宏定义),那么下次寻边界我就从左边向右搜(详细我就不说了,看我的代码)

开始调电机,使用微分先行PID控制,滤波系数1/2最合适,有20ms的大幅振荡,不过可以接收?
电机放到20ms中断,就不在适合微分先行了,升降过于频繁,幅值变化超过10
2023-12-23
开始写转向环
速度并上(偏差串角速度)-->>输出 大致思路如下
              
         获取的偏差                采集偏航角速度yaw
              |                        |
期望中线偏差=0->外环PD控制->输出期望偏差 ->内部角速度PI控制----------
                                                        |
                                                   -----|串级差速环输出
俩电机平均速度(不要俩电机分别PID控制,要增强关联性              |    |
,这样一个电机加速,另一个电机减速)                  -------------。----左电机
        |                                 |        |
期望速度->速度环PID控制->速度环输出--------------  
                                          |        |
                                          ---------。---------右电机



分析十字补线思路      正入十字
右下拐点 x轴逐渐减小然后增加,突变点为拐点
左下拐点 x轴逐渐增加然后减小, 突变点为拐点
右上拐点 三阶段x轴逐渐增加 碰到黑框 x轴不变 然后x轴逐渐减小 x轴逐渐减小的的这一段区域开始进行判断上拐点,设间距为distance让i和i+distance进行y值差值比较,ipts(i,2)-ipts(i+distance,2)大于一定的值认为上拐点
左上拐点和右上拐点同理

正如十字补线 两阶段
一阶段 入十字前补线 这个时候只需要两点计算斜率 斜距 y=kx+b,计算
二阶段 入十字中补线 这个时候左下和右下拐点消失 从上拐点开始最小二乘法拟合预测曲线下探进行补线

